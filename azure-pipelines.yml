trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Build

    jobs: 
    - job :
      displayName: Build
      steps:
      - task: SonarCloudPrepare@1
        displayName: "Prepare SonarCloud"
        inputs:
          SonarCloud: 'SonarCloud'
          organization: 'jannotjarks'
          scannerMode: 'MSBuild'
          projectKey: 'JannoTjarks_E-Paper'
          projectName: 'E-Paper'

      - task: DotNetCoreCLI@2
        displayName: "Dotnet restore"
        inputs:
          command: 'restore'
          restoreArguments: './src/'
          feedsToUse: 'select'

      - task: DotNetCoreCLI@2
        displayName: "Dotnet build"
        inputs:
          command: 'build'
          projects: './src/e-paper-api.csproj'

      - task: SonarCloudAnalyze@1
        displayName: "Run SonarCloud analysis"

      - task: DotNetCoreCLI@2
        displayName: "Dotnet publish into artifact"
        inputs:
          command: 'publish'
          publishWebProjects: false
          projects: './src/e-paper-api.csproj'
          arguments: '--output $(Build.ArtifactStagingDirectory)'
          zipAfterPublish: false
          
      - task: CopyFiles@2
        displayName: "Copy Dockerfile into artifact"
        inputs:
          Contents: 'Dockerfile'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
          publishLocation: 'Container'
  
  - stage: PublishDocker
    displayName: Publish to Docker
    
    jobs:
    - deployment:
      displayName: Publish to Docker
      environment: Production
    
      variables:
        - group: docker-settings
      
      strategy:
          runOnce:
              deploy:
                  steps:
                  - task: FileTransform@2
                    displayName: "Build appsettings for container"
                    inputs:
                      folderPath: '/home/vsts/work/1/drop/src/'
                      xmlTransformationRules: ''
                      jsonTargetFiles: 'appsettings.json'

                  - task: Docker@2
                    displayName: "Build and publish container"
                    inputs:
                      containerRegistry: 'DockerHub'
                      repository: 'jannotjarks/e-paper-api'
                      command: 'buildAndPush'
                      Dockerfile: '/home/vsts/work/1/drop/Dockerfile'
                      tags: |
                        $(Build.BuildId)
                        latest

  - stage: Deployment
    jobs:
      - deployment: DeploymentDocker
        displayName: Deployment of Docker Container
        environment: Production
        
        strategy:
            runOnce:
                deploy:
                    steps:
                    - task: SSH@0
                      displayName: 'Stops and removes running Docker Container with the image'
                      inputs:
                        sshEndpoint: 'root@docker.jtjarks.de'
                        commands: '/root/remove-docker-container-by-image.sh jannotjarks/e-paper-api:latest'

                    - task: SSH@0
                      displayName: 'Refresh Docker Container on docker.jtjarks.de'
                      inputs:
                        sshEndpoint: 'root@docker.jtjarks.de'
                        commands: | 
                          docker pull jannotjarks/e-paper-api:latest
                          docker run -p 8080:80 -d jannotjarks/e-paper-api:latest --restart
      
#      - deployment: DeploymentKestrel
#        displayName: Deployment on jtjarks.de with Kestrel
#        environment: Production
      
#        variables:
#          - group: production-settings
        
#        strategy:
#            runOnce:
#                deploy:
#                    steps:
#                    - task: FileTransform@2
#                      displayName: "Build appsettings for local kestrel-deployment"
#                      inputs:
#                        folderPath: '/home/vsts/work/1/drop/s/'
#                        xmlTransformationRules: ''
#                        jsonTargetFiles: 'appsettings.json'
                    
#                    - task: SSH@0
#                      displayName: 'Stop Service e-paper-api'
#                      inputs:
#                        sshEndpoint: 'root@jtjarks.de'
#                        commands: 'systemctl stop e-paper-api.service'

#                    - task: CopyFilesOverSSH@0
#                      displayName: 'Securely copy files to jtjarks.de'
#                      inputs:
#                        sshEndpoint: 'root@jtjarks.de'
#                        sourceFolder: '/home/vsts/work/1/drop/s/'
#                        targetFolder: '/opt/e-paper-api/'
#                        cleanTargetFolder: true
                        
#                    - task: SSH@0
#                      displayName: 'Start Service e-paper-api'
#                      inputs:
#                        sshEndpoint: 'root@jtjarks.de'
#                        commands: 'systemctl start e-paper-api.service'
